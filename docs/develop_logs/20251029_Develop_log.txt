# 2025년 10월 29일 개발 로그

## 1. 대규모 리팩토링: 전문가 추천 디렉토리 구조 적용

- `apps`와 `packages` 디렉토리 구조를 도입하여 애플리케이션과 재사용 라이브러리를 분리.
- 기존 `packages/cheduk-frontend`를 `apps/web`으로 이동.
- 육각 그리드 좌표 계산 로직을 분리하기 위해 `packages/geometry-hex` 패키지 신설.
- `apps/web/src/lib/tileCoordinates.ts`의 좌표 데이터를 `packages/geometry-hex`로 이전하고, `apps/web`이 새 패키지를 참조하도록 의존성 수정.
- `npm`의 `workspace:` 프로토콜 지원 문제로 인해, `pnpm`으로 패키지 매니저를 전환하고 `pnpm-workspace.yaml`을 설정하여 의존성 설치 완료.

## 2. 리팩토링으로 인한 상태 회귀(Regression) 문제 해결

리팩토링 직후, 기물이 보이지 않고 이동이 불가능하며 과거의 디버그용 포인트가 보이는 등 프로젝트 상태가 과거로 돌아가는 문제 발생. 원인 분석 결과, 파일 이동 과정에서 여러 핵심 파일이 과거 버전으로 돌아간 것을 확인하고 아래와 같이 순차적으로 복구함.

1.  **`packages/core-logic/src/index.ts`**: 게임 로직이 비어있는 초기 상태로 돌아가 있던 것을, '수반'과 '경호원'의 이동 규칙이 포함된 버전으로 복원.
2.  **`apps/web/src/hooks/useGameState.ts`**: `mockData`를 사용하던 옛날 코드를, 복원된 `core-logic`의 함수들(`createInitialGameState`, `getValidMoves` 등)을 사용하도록 수정.
3.  **`apps/web/src/components/Board.tsx`**: 기물 렌더링 및 클릭 이벤트 핸들러가 없던 구버전 코드를, 새로운 `useGameState` 훅과 연동하여 기물, 유효 이동 경로, 선택 상태 등을 모두 처리하는 완전한 버전으로 교체.
4.  **`apps/web/src/App.tsx`**: `Board` 컴포넌트에 잘못된 props를 전달하던 문제를, `useGameState`의 모든 상태와 핸들러를 자식 컴포넌트에 올바르게 전달하도록 수정.
5.  **`apps/web/src/components/GameInfo.tsx`**: `App.tsx`가 전달하는 새로운 데이터 구조에 맞게 props를 받도록 수정.

## 3. 시각적/논리적 버그 수정

상태 복구 후 발생한 2차 문제들을 해결.

1.  **기물 위치 오류**: `geometry-hex`의 좌표 데이터가 불완전하여 기물들이 좌측 상단에 몰리는 현상 발생. 기존 데이터를 기반으로 좌표 생성 공식을 역산하여, 11x12 전체 보드에 대한 좌표 데이터를 프로그래밍으로 재생성하여 해결.
2.  **기물 이동 오류**: 기물 위치는 정상화되었으나 이동 방향이 어긋나는 문제 발생. 원인은 `core-logic`의 이동 규칙 로직이 `pointy-top` 기반의 `odd-r` 오프셋 좌표계를 올바르게 반영하지 못했던 것. 이를 `pointy-top` 및 `odd-r` 기준에 맞게 수정하여 해결.

## 4. 외부 환경 문제 해결

- **배경 대각선 문제**: 모든 코드 수정 후에도 Chrome 브라우저에서만 배경에 정체불명의 대각선들이 나타나는 문제 발생.
- 코드베이스 전체를 재검색했으나 원인이 될 코드가 없음을 확인.
- 시크릿 모드 테스트를 통해 확장 프로그램의 영향이 아님을 확인.
- 최종적으로 Chrome의 **'하드웨어 가속'** 옵션과 그래픽 드라이버의 충돌 문제임을 확인. 해당 옵션을 비활성화하여 문제 해결.

## 5. Git 작업 및 마무리

- `docs/develop_logs`, `docs/error_logs` 등 원격 저장소에 포함될 필요 없는 파일들을 `.gitignore`에 추가.
- Gemini 에이전트가 향후 `.gitignore` 파일을 무시하고 파일을 읽어야 할 때, 매번 요청할 필요가 없도록 해당 설정을 기억시킴 (`save_memory` 사용).
- 사용자가 직접 `git add .` 및 `git commit` 완료.

## 현재 상태

- 전문가 수준의 모노레포 디렉토리 구조 리팩토링 완료.
- 리팩토링 과정에서 발생했던 모든 기능적, 시각적 문제가 해결되어 이전 버전의 기능이 100% 정상 작동함.
- 모든 변경사항에 대한 커밋 완료.
